{"version":3,"file":"theme-DAGjCgK1.js","sources":["../../src/stores/theme.ts"],"sourcesContent":["import { ref } from 'vue'\nimport { defineStore } from 'pinia'\n\ninterface ThemeInfo {\n  id: string;\n  name: string;\n}\n\nexport const useThemeStore = defineStore('theme', () => {\n  const darkThemes: ThemeInfo[] = [\n    { id: 'dark', name: 'Dark Mode' },\n    { id: 'black', name: 'Black Mode' },\n    { id: 'navy', name: 'Navy Mode' },\n    { id: 'charcoal', name: 'Charcoal Mode' },\n    { id: 'midnight', name: 'Midnight Mode' },\n    { id: 'deep-purple', name: 'Deep Purple Mode' }\n  ]\n\n  const savedTheme = localStorage.getItem('theme') || 'light'\n  const isDark = ref<boolean>(savedTheme !== 'light')\n  const currentDarkTheme = ref<string>(savedTheme !== 'light' ? savedTheme : 'dark')\n  const currentDarkThemeInfo = ref<ThemeInfo>(darkThemes.find(theme => theme.id === currentDarkTheme.value) || darkThemes[0])\n\n  function toggleTheme(): void {\n    isDark.value = !isDark.value\n    localStorage.setItem('theme', isDark.value ? currentDarkTheme.value : 'light')\n    updateThemeClass()\n  }\n  \n  function setTheme(themeId: string): void {\n    if (themeId === 'light') {\n      isDark.value = false\n    } else {\n      isDark.value = true\n      currentDarkTheme.value = themeId\n      const theme = darkThemes.find(t => t.id === themeId)\n      if (theme) {\n        currentDarkThemeInfo.value = theme\n      }\n    }\n    localStorage.setItem('theme', themeId)\n    updateThemeClass()\n  }\n  \n  function updateThemeClass(): void {\n    try {\n      // Lấy tất cả các theme class\n      const themeClasses = darkThemes.map(theme => `theme-${theme.id}`)\n      \n      // Xóa tất cả các theme class hiện tại\n      document.documentElement.classList.remove('dark', ...themeClasses)\n      \n      // Thêm class mới nếu đang ở dark mode\n      if (isDark.value) {\n        document.documentElement.classList.add('dark')\n        document.documentElement.classList.add(`theme-${currentDarkTheme.value}`)\n      }\n    } catch (error) {\n      console.error('Error updating theme class:', error)\n    }\n  }\n  \n  function initTheme(): void {\n    updateThemeClass()\n  }\n  \n  return { \n    isDark, \n    darkThemes, \n    currentDarkTheme, \n    currentDarkThemeInfo,\n    toggleTheme, \n    setTheme, \n    initTheme \n  }\n}) "],"names":[],"mappings":";AAQO,MAAM,gBAAgB,YAAY,SAAS,MAAM;AACtD,QAAM,aAA0B;AAAA,IAC9B,EAAE,IAAI,QAAQ,MAAM,YAAA;AAAA,IACpB,EAAE,IAAI,SAAS,MAAM,aAAA;AAAA,IACrB,EAAE,IAAI,QAAQ,MAAM,YAAA;AAAA,IACpB,EAAE,IAAI,YAAY,MAAM,gBAAA;AAAA,IACxB,EAAE,IAAI,YAAY,MAAM,gBAAA;AAAA,IACxB,EAAE,IAAI,eAAe,MAAM,mBAAA;AAAA,EAAmB;AAGhD,QAAM,aAAa,aAAa,QAAQ,OAAO,KAAK;AACpD,QAAM,SAAS,IAAa,eAAe,OAAO;AAClD,QAAM,mBAAmB,IAAY,eAAe,UAAU,aAAa,MAAM;AACjF,QAAM,uBAAuB,IAAe,WAAW,KAAK,CAAA,UAAS,MAAM,OAAO,iBAAiB,KAAK,KAAK,WAAW,CAAC,CAAC;AAE1H,WAAS,cAAoB;AAC3B,WAAO,QAAQ,CAAC,OAAO;AACvB,iBAAa,QAAQ,SAAS,OAAO,QAAQ,iBAAiB,QAAQ,OAAO;AAC7E,qBAAA;AAAA,EAAiB;AAGnB,WAAS,SAAS,SAAuB;AACvC,QAAI,YAAY,SAAS;AACvB,aAAO,QAAQ;AAAA,IAAA,OACV;AACL,aAAO,QAAQ;AACf,uBAAiB,QAAQ;AACzB,YAAM,QAAQ,WAAW,KAAK,CAAA,MAAK,EAAE,OAAO,OAAO;AACnD,UAAI,OAAO;AACT,6BAAqB,QAAQ;AAAA,MAAA;AAAA,IAC/B;AAEF,iBAAa,QAAQ,SAAS,OAAO;AACrC,qBAAA;AAAA,EAAiB;AAGnB,WAAS,mBAAyB;AAChC,QAAI;AAEF,YAAM,eAAe,WAAW,IAAI,WAAS,SAAS,MAAM,EAAE,EAAE;AAGhE,eAAS,gBAAgB,UAAU,OAAO,QAAQ,GAAG,YAAY;AAGjE,UAAI,OAAO,OAAO;AAChB,iBAAS,gBAAgB,UAAU,IAAI,MAAM;AAC7C,iBAAS,gBAAgB,UAAU,IAAI,SAAS,iBAAiB,KAAK,EAAE;AAAA,MAAA;AAAA,IAC1E,SACO,OAAO;AACd,cAAQ,MAAM,+BAA+B,KAAK;AAAA,IAAA;AAAA,EACpD;AAGF,WAAS,YAAkB;AACzB,qBAAA;AAAA,EAAiB;AAGnB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ,CAAC;"}